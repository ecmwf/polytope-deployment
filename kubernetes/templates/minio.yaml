{{ if and (.Values.deployment.minio) (gt .Values.deployment.minio.replicas 0.0) }}

#########################################
#         D E P L O Y M E N T
#########################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
spec:
  replicas: {{ .Values.deployment.minio.replicas }}
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: minio-pv-claim
      containers:
      - name: minio
        volumeMounts:
        - name: data 
          mountPath: "/data"
        image: minio/minio:RELEASE.2020-02-27T00-23-05Z
        args:
        - server
        - /data
        env:
        - name: MINIO_ACCESS_KEY
          value: {{ .Values.staging.s3.access_key }}
        - name: MINIO_SECRET_KEY
          value: {{ .Values.staging.s3.secret_key }}
        ports:
        - containerPort: 9000
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 300
          periodSeconds: 300

---

#########################################
#           V O L U M E
#########################################

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi

---

#########################################
#           S E R V I C E
#########################################

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.deployment.minio.host }}
spec:
  type: NodePort
  ports:
  - protocol: TCP
    targetPort: 9000
    port: {{ .Values.deployment.minio.port }}

  selector:
    app: minio

{{ end }}
