name: Check and publish

on:

  push:
    branches:
    - '**'
    tags:
    - '**'

  pull_request: ~

  workflow_dispatch: ~

jobs:

  quality:
    name: Code QA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install black flake8 isort
      - run: black --version
      - run: isort --check .
      - run: black --check .
      - run: flake8 .

  docs:
    if: |
      (github.event_name == 'push' && contains(github.ref, 'refs/tags/')) ||
      github.ref == 'refs/heads/master'
    name: Build Readthedocs
    runs-on: ubuntu-latest
    steps:
      - name: Start polytope-docs build
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.ECMWF_REPO_ACCESS }}
          script: |-
            await github.actions.createWorkflowDispatch({
                owner: 'ecmwf-projects',
                repo: 'polytope-docs',
                workflow_id: 'docs.yaml',
                ref: 'master'
            });

  publish:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    name: Publish on Readthedocs
    needs: [quality, docs]
    runs-on: ubuntu-latest
    steps:
      - name: Start polytope-docs build
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.ECMWF_REPO_ACCESS }}
          script: |-
            await github.actions.createWorkflowDispatch({
                owner: 'ecmwf-projects',
                repo: 'polytope-docs',
                workflow_id: 'publish.yaml',
                ref: 'master'
            });

  cd:
    #if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    if: github.event_name == 'push' && github.ref == 'refs/heads/cd'
    name: Deploy
    needs: [quality]
    runs-on: [self-hosted, web-builder]
    steps:
      - name: Checkout polytope-deployment repo
        uses: actions/checkout@v3
        with:
          path: polytope-deployment

      - name: Checkout polytope-server repo
        uses: actions/checkout@v3
        with:
          repository: ecmwf/polytope-server
          path: polytope-server

      - name: Checkout polytope-config repo
        uses: actions/checkout@v3
        with:
          repository: ecmwf/polytope-config
          path: polytope-config
          token: ${{ secrets.GH_REPO_READ_TOKEN }}

      - name: Checkout polytope repo
        uses: actions/checkout@v3
        with:
          repository: ecmwf/polytope
          path: polytope

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.7"

      - name: Install pip deps
        run: |
          pip install hiyapyco pykwalify
          pip install -e ./polytope

      - name: (TODO) Create kubeconfig
        run: |
          echo "TODO" > kubeconfig.yml
        working-directory: ./polytope-deployment/kubernetes

      - name: Configure polytope
        run: |
          configure.py -f ../../polytope-config/default.yaml -f ../../polytope-config/deployment/kubernetes/dev.yaml
        working-directory: ./polytope-deployment/kubernetes

      - name: Build
        run: skaffold build
        working-directory: ./polytope-deployment/kubernetes

      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          registry: eccr.ecmwf.int
          username: ${{ secrets.ECMWF_DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.ECMWF_DOCKER_REGISTRY_ACCESS_TOKEN }}

      - name: Configure docker registry credentials
        run: |
          kubectl create secret generic polytope-registry-cred \
            --from-file=.dockerconfigjson=${HOME}/.docker/config.json \
            --type=kubernetes.io/dockerconfigjson 2>&1

      - name: Deploy
        run: helm install polytope .
        working-directory: ./polytope-deployment/kubernetes
